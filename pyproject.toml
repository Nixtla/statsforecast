[build-system]
requires = ["setuptools>=45", "pybind11>=2.10", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "statsforecast"
dynamic = ["version"]
description = "Time series forecasting suite using statistical models"
readme = "README.md"
license = { text = "Apache Software License 2.0" }
authors = [
    { name = "Nixtla", email = "business@nixtla.io" }
]
keywords = ["time-series", "forecasting", "arima", "ets"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"
dependencies = [
    "cloudpickle",
    "coreforecast>=0.0.12",
    "numba>=0.55.0 ; sys_platform != 'win32' or python_version < '3.10' or python_version >= '3.12'",
    "numba>=0.58.0,<0.60.0 ; sys_platform == 'win32' and python_version >= '3.10' and python_version < '3.12'",
    "llvmlite>=0.41.0,<0.43.0 ; sys_platform == 'win32' and python_version >= '3.10' and python_version < '3.12'",
    "numpy>=1.21.6",
    "pandas>=1.3.5",
    "scipy>=1.7.3,<1.16.0",
    "statsmodels>=0.13.2",
    "tqdm",
    "fugue>=0.8.1",
    "utilsforecast>=0.1.4",
    "threadpoolctl>=3",
]

[project.urls]
Homepage = "https://github.com/Nixtla/statsforecast/"
Repository = "https://github.com/Nixtla/statsforecast/"
Documentation = "https://nixtlaverse.nixtla.io/statsforecast/"

[project.optional-dependencies]
dev = [
    "black",
    "datasetsforecast",
    "fastcore<=1.7.29",
    "fire",
    "nbformat",
    "nbdev_plotly",
    "pandas[plot]",
    "polars[numpy]",
    "pre-commit",
    "prophet",
    "pyarrow<21.0.0",
    "pybind11",
    "pytest",
    "scikit-learn",
    "setuptools<70",
    "supersmoother",
    "yfinance",
    "pytest",
    "pytest-cov",
]
dask = [
    "dask<=2024.12.1",
    "fugue[dask]>=0.8.1",
]
ray = [
    "fugue[ray]>=0.8.1 ; python_version < '3.12'",
    "protobuf>=3.15.3,<4.0.0 ; python_version < '3.12'",
    "numpy<2 ; python_version < '3.12'",
    "pandas<2.2 ; python_version < '3.12'",
    "ray<=2.10 ; python_version < '3.12'",
]
spark = [
    "fugue[spark]>=0.8.1",
]
plotly = [
    "plotly",
    "plotly-resampler",
]
polars = [
    "polars[numpy]",
]
all = [
    "dask<=2024.12.1",
    "fugue[dask]>=0.8.1",
    "fugue[spark]>=0.8.1",
    "plotly",
    "plotly-resampler",
    "polars[numpy]",
    "black",
    "datasetsforecast",
    "fastcore<=1.7.29",
    "fire",
    "nbformat",
    "nbdev_plotly",
    "pandas[plot]",
    "polars[numpy]",
    "pre-commit",
    "prophet",
    "pyarrow<21.0.0",
    "pybind11",
    "pytest",
    "pytest-cov",
    "scikit-learn",
    "setuptools<70",
    "supersmoother",
    "yfinance",
    "fugue[ray]>=0.8.1 ; python_version < '3.12'",
    "protobuf>=3.15.3,<4.0.0 ; python_version < '3.12'",
    "numpy<2 ; python_version < '3.12'",
    "pandas<2.2 ; python_version < '3.12'",
    "ray<=2.10 ; python_version < '3.12'",
]

[tool.setuptools]
packages = ["statsforecast"]

[tool.setuptools.dynamic]
version = {attr = "statsforecast.__version__"}

[tool.setuptools.package-dir]
"" = "python"

[tool.setuptools.package-data]
"*" = ["**/*"]

[tool.cibuildwheel]
archs = "all"
build-verbosity = 1

[tool.ruff]
target-version = "py38"
line-length = 88
lint.select = ["F"]

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=python/statsforecast",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
